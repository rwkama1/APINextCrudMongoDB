{"ast":null,"code":"import { Component } from \"react\";\nimport cors from \"./cors\";\nimport DataProduct from \"crudmongodb\";\nexport default class Product extends Component {\n  async render(req, res) {\n    if (req.method === \"GET\") {\n      await cors(req, res);\n      const list = await DataProduct.getInstance().getProducts();\n      return res.send(list);\n    }\n  }\n\n} // export default async function (req, res) {\n//     if(req.method===\"GET\")\n//     {\n//       await cors(req, res)\n//       const list=await DProduct.getInstance().listproducts();\n//       res.send(list);\n//     }\n//     if(req.method===\"POST\")\n//     {\n//       await cors(req, res)\n//       try\n//       {\n//       const data = req.body;\n//       var dtproduct=new Product(data.barcode, data.name,data.price);\n//       const addproduct=await DProduct.getInstance().addProduct(dtproduct);\n//       return res.status(200).json({ status: \"Success\" });\n//       }\n//       catch (error) {\n//         return res.status(500).json({\n//           status: \"Error\",\n//           data: { msg: \"Could not add product\", error }\n//         });\n//       }\n//     }\n//     if(req.method===\"PUT\")\n//     {\n//       await cors(req, res)\n//       try\n//       {\n//       const data = req.body;\n//       var dtproduct=new Product(data.barcode, data.name,data.price);\n//       const updprod=await DProduct.getInstance().updateProduct(dtproduct);\n//       return res.status(200).json({ status: \"Success\" });\n//       }\n//       catch (error) {\n//         return res.status(500).json({\n//           status: \"Error\",\n//           data: { msg: \"Could not update product\", error }\n//         });\n//       }\n//     }\n//     if(req.method===\"DELETE\")\n//     {\n//       await cors(req, res);\n//       const { barcode } = req.query;\n//       try\n//       {\n//       var dtproduct=new Product(barcode, \"\",0);\n//       const delprod=await DProduct.getInstance().deleteProduct(dtproduct);\n//       return res.status(200).json({ status: \"Success\" });\n//       }\n//       catch (error) {\n//         return res.status(500).json({\n//           status: \"Error\",\n//           data: { msg: \"Could not delete product\", error }\n//         });\n//       }\n//     }\n//     }","map":{"version":3,"sources":["C:/Users/Waldemar/Desktop/Guias y Cosas Analista de Sistemas/APINextCrudMongo/pages/api/product.js"],"names":["Component","cors","DataProduct","Product","render","req","res","method","list","getInstance","getProducts","send"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,eAAe,MAAMC,OAAN,SAAsBH,SAAtB,CACf;AACG,QAAMI,MAAN,CAAaC,GAAb,EAAiBC,GAAjB,EACC;AACA,QAAGD,GAAG,CAACE,MAAJ,KAAa,KAAhB,EACA;AACE,YAAMN,IAAI,CAACI,GAAD,EAAMC,GAAN,CAAV;AACA,YAAME,IAAI,GAAC,MAAMN,WAAW,CAACO,WAAZ,GAA0BC,WAA1B,EAAjB;AACD,aAAOJ,GAAG,CAACK,IAAJ,CAASH,IAAT,CAAP;AACA;AACA;;AATL,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Component } from \"react\";\r\nimport cors from \"./cors\";\r\nimport DataProduct from \"crudmongodb\";\r\nexport default class Product extends Component\r\n{\r\n   async render(req,res)\r\n    {\r\n    if(req.method===\"GET\")\r\n    {\r\n      await cors(req, res)\r\n      const list=await DataProduct.getInstance().getProducts();\r\n     return res.send(list);\r\n    }\r\n    }\r\n}\r\n// export default async function (req, res) {\r\n//     if(req.method===\"GET\")\r\n//     {\r\n//       await cors(req, res)\r\n//       const list=await DProduct.getInstance().listproducts();\r\n//       res.send(list);\r\n//     }\r\n//     if(req.method===\"POST\")\r\n//     {\r\n//       await cors(req, res)\r\n//       try\r\n//       {\r\n//       const data = req.body;\r\n//       var dtproduct=new Product(data.barcode, data.name,data.price);\r\n      \r\n//       const addproduct=await DProduct.getInstance().addProduct(dtproduct);\r\n//       return res.status(200).json({ status: \"Success\" });\r\n//       }\r\n//       catch (error) {\r\n//         return res.status(500).json({\r\n//           status: \"Error\",\r\n//           data: { msg: \"Could not add product\", error }\r\n//         });\r\n//       }\r\n//     }\r\n//     if(req.method===\"PUT\")\r\n//     {\r\n//       await cors(req, res)\r\n//       try\r\n//       {\r\n//       const data = req.body;\r\n//       var dtproduct=new Product(data.barcode, data.name,data.price);\r\n//       const updprod=await DProduct.getInstance().updateProduct(dtproduct);\r\n//       return res.status(200).json({ status: \"Success\" });\r\n//       }\r\n//       catch (error) {\r\n//         return res.status(500).json({\r\n//           status: \"Error\",\r\n//           data: { msg: \"Could not update product\", error }\r\n//         });\r\n//       }\r\n//     }\r\n//     if(req.method===\"DELETE\")\r\n//     {\r\n//       await cors(req, res);\r\n//       const { barcode } = req.query;\r\n//       try\r\n//       {\r\n//       var dtproduct=new Product(barcode, \"\",0);\r\n//       const delprod=await DProduct.getInstance().deleteProduct(dtproduct);\r\n//       return res.status(200).json({ status: \"Success\" });\r\n//       }\r\n//       catch (error) {\r\n//         return res.status(500).json({\r\n//           status: \"Error\",\r\n//           data: { msg: \"Could not delete product\", error }\r\n//         });\r\n//       }\r\n//     }\r\n//     }"]},"metadata":{},"sourceType":"module"}